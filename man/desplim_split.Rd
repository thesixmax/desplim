% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/desplim_split.R
\name{desplim_split}
\alias{desplim_split}
\title{Split a polygon based on a sf LINESTRING object and optional border
connections.}
\usage{
desplim_split(
  input_polygon,
  input_lines,
  input_buildings = NULL,
  enable_line_nearest_node = TRUE,
  enable_border_connect = FALSE,
  ...
)
}
\arguments{
\item{input_polygon}{object of class sf of type POLYGON to be split.}

\item{input_lines}{object of class sf of type LINESTRING or MULTILINESTRING
to be used for splitting.}

\item{input_buildings}{object of class sf of type POLYGON or MULTIPOLYGON.
An optional sf object representing buildings which cannot be intersected
during the splitting procedure. Default is \code{NULL}.}

\item{enable_line_nearest_node}{logical; whether to connect leaf nodes of
\code{input_lines} to the nearest node using \code{desplim_line_nearest_node}. Default
is \code{TRUE}.}

\item{enable_border_connect}{logical; whether to connect \code{input_lines} to the
border of \code{input_polygon} using \code{desplim_connect_border}. Default is \code{FALSE}.}

\item{...}{additional arguments passed to \code{desplim_connect_border} if set to
\code{TRUE}.}
}
\value{
An sf object of POLYGONs resulting from the split.
}
\description{
Split a polygon based on a sf LINESTRING object and optional border
connections.
}
\details{
The function splits an input polygon based on an initial set of
linestrings. If \code{enable_line_nearest_node} is \code{TRUE}, leaf nodes in the input
linestrings are connected to the nearest node as laid out in
\code{desplim_line_nearest_node}. If \code{enable_border_connect} is \code{TRUE}, the input
linestrings are connected to the border of the input polygon using
\code{desplim_connect_border}.
}
\examples{
# Create polygon
crs <- 32632
district_poly <- sf::st_polygon(list(rbind(
  c(0, 0),
  c(100, 0),
  c(100, 80),
  c(90, 90),
  c(0, 80),
  c(0, 0)
)))
district_sf <- sf::st_as_sf(sf::st_sfc(district_poly, crs = crs))
plot(district_sf, border = "black", lwd = 2, reset = FALSE)

# Create roads
road1 <- sf::st_linestring(rbind(c(5, 5), c(50, 60), c(110, 50)))
road2 <- sf::st_linestring(rbind(c(-10, 60), c(20, 40), c(80, 10)))
road3 <- sf::st_linestring(rbind(c(-5, 70), c(90, 70), c(90, 20), c(110, 20)))
roads_sf <- sf::st_as_sf(sf::st_sfc(road1, road2, road3, crs = crs))
plot(roads_sf, col = "tomato3", lwd = 2, add = TRUE)

# Split with no connection
split_no_connect <- desplim_split(
  district_sf,
  roads_sf,
  enable_line_nearest_node = FALSE
)
plot(split_no_connect, border = "black", lwd = 2)

# Split with default settings
split_nearest_node <- desplim_split(
  district_sf,
  roads_sf
)
plot(split_nearest_node, border = "slateblue3", lwd = 2)

# Split with border connection
split_polygons_border <- desplim_split(
  district_sf,
  roads_sf,
  enable_border_connect = TRUE,
  distance_nodes = 50,
  distance_intersect = 5
)
plot(split_polygons_border, border = "olivedrab", lwd = 2)
}
