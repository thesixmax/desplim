% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/desplim_split.R
\name{desplim_split}
\alias{desplim_split}
\title{Split a polygon based on a sf LINESTRING object and optional border
connections.}
\usage{
desplim_split(
  input_polygon,
  input_lines,
  input_buildings = NULL,
  enable_line_nearest_node = TRUE,
  enable_border_connect = FALSE,
  ...
)
}
\arguments{
\item{input_polygon}{object of class sf of type POLYGON to be split.}

\item{input_lines}{object of class sf of type LINESTRING or MULTILINESTRING
to be used for splitting.}

\item{input_buildings}{object of class sf of type POLYGON or MULTIPOLYGON.
An optional sf object representing buildings which cannot be intersected
during the splitting procedure. Default is \code{NULL}.}

\item{enable_line_nearest_node}{logical; whether to connect leaf nodes of
\code{input_lines} to the nearest node using \code{desplim_line_nearest_node}. Default
is \code{TRUE}.}

\item{enable_border_connect}{logical; whether to connect \code{input_lines} to the
border of \code{input_polygon} using \code{desplim_connect_border}. Default is \code{FALSE}.}

\item{...}{additional arguments passed to \code{desplim_connect_border} if set to
\code{TRUE}.}
}
\value{
An sf object of POLYGONs resulting from the split.
}
\description{
Split a polygon based on a sf LINESTRING object and optional border
connections.
}
\details{
The function splits an input polygon based on an initial set of
linestrings. If \code{enable_line_nearest_node} is \code{TRUE}, leaf nodes in the input
linestrings are connected to the nearest node as laid out in
\code{desplim_line_nearest_node}. If \code{enable_border_connect} is \code{TRUE}, the input
linestrings are connected to the border of the input polygon using
\code{desplim_connect_border}.
}
