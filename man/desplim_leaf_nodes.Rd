% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/desplim_leaf_nodes.R
\name{desplim_leaf_nodes}
\alias{desplim_leaf_nodes}
\title{Identify leaf nodes of an \code{sf} LINESTRING object}
\usage{
desplim_leaf_nodes(input_lines)
}
\arguments{
\item{input_lines}{object of class sf of type LINESTRING or MULTILINESTRING.}
}
\value{
An sf object of type POINT containing all leaf nodes of
\code{input_lines}.
}
\description{
Function for computing leaf nodes of an \code{sf} MULTILINESTRING or
LINESTRING object.
}
\details{
Function to compute leaf nodes, i.e. nodes which only intersect with
one linestring in the \code{sf} LINESTRING object. If \code{input_lines} contains
geometries of type MULTILINESTRING, they are cast to LINESTRING before
computing.
}
\examples{
# Generate lines
line1 <- sf::st_linestring(rbind(c(0, 0), c(1, 1)))
line2 <- sf::st_linestring(rbind(c(1, 1), c(2, 2)))
line3 <- sf::st_linestring(rbind(c(1, 1), c(1, 0)))
combined_sf <- sf::st_as_sf(sf::st_sfc(line1, line2, line3, crs = 4326))

# Compute leaf nodes
leaf_nodes <- desplim_leaf_nodes(combined_sf)
print(leaf_nodes)

# Visualise
plot(sf::st_geometry(combined_sf), col = "slateblue3", lwd = 2)
plot(sf::st_geometry(leaf_nodes), col = "tomato3", pch = 16, cex = 2, add = TRUE)
}
