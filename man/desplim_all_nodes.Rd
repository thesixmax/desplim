% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/desplim_all_nodes.R
\name{desplim_all_nodes}
\alias{desplim_all_nodes}
\title{Compute all nodes of an \code{sf} LINESTRING object}
\usage{
desplim_all_nodes(input_lines, cast_substring = FALSE)
}
\arguments{
\item{input_lines}{object of class sf of type LINESTRING or MULTILINESTRING.}

\item{cast_substring}{logical; should the input linestrings be cast to
substring? Default is \code{FALSE}.}
}
\value{
An sf object of type POINT containing all nodes of \code{input_lines}.
}
\description{
Function for computing all nodes of an \code{sf}
MULTILINESTRING or LINESTRING object.
}
\details{
Function to compute all nodes of an \code{sf} LINESTRING object, after
optionally casting \code{input_lines} to substrings. If \code{input_lines} contains
geometries of type MULTILINESTRING, they are cast to LINESTRING before
computing.
}
\examples{
# Generate lines
line1 <- sf::st_linestring(rbind(c(0, 0), c(1, 1)))
line2 <- sf::st_linestring(rbind(c(1, 1), c(2, 0)))
combined_sf <- sf::st_as_sf(sf::st_sfc(line1, line2, crs = 4326))

# Compute all nodes
all_nodes <- desplim_all_nodes(combined_sf)
print(all_nodes)

# Visualise
plot(sf::st_geometry(combined_sf), col = "blue", lwd = 2)
plot(sf::st_geometry(all_nodes), col = "red", pch = 16, cex = 2, add = TRUE)
}
