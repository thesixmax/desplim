% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/desplim_line_nearest_node.R
\name{desplim_line_nearest_node}
\alias{desplim_line_nearest_node}
\title{Calculate the minimum distance linestring from an \code{sf} POINT object to nodes
of a \code{sf} LINESTRING object}
\usage{
desplim_line_nearest_node(
  input_nodes,
  input_lines,
  input_buildings = NULL,
  cast_substring = TRUE,
  combine_nodes = TRUE,
  ignore_equal = TRUE
)
}
\arguments{
\item{input_nodes}{object of class sf with geometry type POINT or MULTIPOINT.}

\item{input_lines}{object of class sf with geometry type LINESTRING or
MULTILINESTRING.}

\item{input_buildings}{optional object of class sf with geometry type POLYGON
or MULTIPOLYGON to not be crossed.}

\item{cast_substring}{logical; should the input linestring be cast to
substring? Default is \code{TRUE}.}

\item{combine_nodes}{logical; should the input nodes and nodes of the input
lines be combined? Default is \code{TRUE}.}

\item{ignore_equal}{logical; should output linestrings which are exactly
equal to one or more elements in \code{input_lines} be ignored? Default is \code{TRUE}.}
}
\value{
An \code{sf} object of type LINESTRING containing the minimum distance
linestrings from each node in \code{input_nodes} to nodes in \code{input_lines} or the
combined set of \code{input_nodes} and nodes in \code{input_lines}.
}
\description{
Calculate the minimum distance linestring connection from an
\code{sf} POINT object to nodes of an \code{sf} LINESTRING object
}
\details{
For each input node, the function computes the minimum distance to
the chosen set of nodes and outputs the minimum distance linestrings. In
cases where the minimum distance is zero, due to overlap of the input node
and one or more nodes in \code{input_lines}, the second minimum distance
linestring is computed. If \code{input_nodes} or \code{input_lines} contain geometries
of type MULTIPOINT or MULTILINESTRING, they are converted to POINT and
LINESTRING respectively before computing.
}
